// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(VehiculoDbContext))]
    [Migration("20180819010346_Migration1")]
    partial class Migration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Areas_Reparacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Areas_Reparacion");
                });

            modelBuilder.Entity("Model.Citas", b =>
                {
                    b.Property<int>("Id_Cita")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientesId");

                    b.Property<string>("Detalle");

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("Hora_llegada");

                    b.Property<string>("Hora_salida");

                    b.Property<int>("MyProperty");

                    b.HasKey("Id_Cita");

                    b.HasIndex("ClientesId");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("Model.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cedula");

                    b.Property<string>("Direccion");

                    b.Property<string>("Nombre");

                    b.Property<string>("Telefono");

                    b.Property<int>("VehiculosId");

                    b.HasKey("Id");

                    b.HasIndex("VehiculosId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Model.Departamentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("Model.Empleado_Atiende", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientesId");

                    b.Property<int>("Id_Empleado");

                    b.HasKey("ID");

                    b.HasIndex("ClientesId");

                    b.HasIndex("Id_Empleado");

                    b.ToTable("Empleado_Atiende");
                });

            modelBuilder.Entity("Model.Empleados", b =>
                {
                    b.Property<int>("Id_Empleado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contraseña");

                    b.Property<string>("Usuario");

                    b.HasKey("Id_Empleado");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Model.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Areas_ReparacionId");

                    b.Property<string>("Costo");

                    b.Property<string>("Garantia");

                    b.HasKey("Id");

                    b.HasIndex("Areas_ReparacionId");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("Model.Mantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FacturaId");

                    b.Property<string>("Fecha_entrada");

                    b.Property<string>("Fecha_salida");

                    b.Property<int>("MecanicosId");

                    b.Property<int>("VehiculosId");

                    b.HasKey("Id");

                    b.HasIndex("FacturaId");

                    b.HasIndex("MecanicosId");

                    b.HasIndex("VehiculosId");

                    b.ToTable("Mantenimiento");
                });

            modelBuilder.Entity("Model.Mecanicos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartamentosId");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentosId");

                    b.ToTable("Mecanicos");
                });

            modelBuilder.Entity("Model.Vehiculos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agencia");

                    b.Property<int>("Año");

                    b.Property<string>("Estado");

                    b.Property<string>("Matricula");

                    b.Property<string>("Modelo");

                    b.Property<int>("MyProperty");

                    b.HasKey("Id");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("Model.Citas", b =>
                {
                    b.HasOne("Model.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Model.Clientes", b =>
                {
                    b.HasOne("Model.Vehiculos", "Vehiculos")
                        .WithMany()
                        .HasForeignKey("VehiculosId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Model.Empleado_Atiende", b =>
                {
                    b.HasOne("Model.Clientes", "clientes")
                        .WithMany()
                        .HasForeignKey("ClientesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Model.Empleados", "Empleados")
                        .WithMany()
                        .HasForeignKey("Id_Empleado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Model.Factura", b =>
                {
                    b.HasOne("Model.Areas_Reparacion", "Areas_Reparacion")
                        .WithMany()
                        .HasForeignKey("Areas_ReparacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Model.Mantenimiento", b =>
                {
                    b.HasOne("Model.Factura", "Factura")
                        .WithMany()
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Model.Mecanicos", "Mecanicos")
                        .WithMany()
                        .HasForeignKey("MecanicosId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Model.Vehiculos", "Vehiculos")
                        .WithMany()
                        .HasForeignKey("VehiculosId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Model.Mecanicos", b =>
                {
                    b.HasOne("Model.Departamentos", "Departamentos")
                        .WithMany()
                        .HasForeignKey("DepartamentosId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
